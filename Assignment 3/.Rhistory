setwd("~/GitHub/EmpiricalFinance/Assignment 3")
library(xts)
library(PerformanceAnalytics)
library(psych)
library(roll)
library(data.table)
###############
# Data import #
###############
prices <- read.delim(file = 'A3_dataset_01.txt', header = TRUE, sep = '\t', dec = '.')
SMI_monthly <- read.delim(file = 'A3_dataset_02.txt', header = TRUE, sep = '\t', dec = '.')
interest_rates <- read.delim(file = 'A2_dataset_03.txt', header = TRUE, sep = '\t', dec = '.')
# # create monthly returns for stocks and SMI
date <- as.Date(prices[,1], format = "%d.%m.%Y")
prices.ts <- xts(x = prices[,-1], order.by = date)
#View(prices.ts)
returns <- Return.calculate(prices = prices.ts, method = 'discrete')
#
SMI_monthly <- xts(SMI_monthly[,-1], order.by = as.Date(SMI_monthly$Date, format = "%d.%m.%Y"))
#View(SMI_monthly)
SMI_TotRet_mon <- Return.calculate(SMI_monthly)
#
# # turn interest_rates into ts and divide by 100 because it is in percentages and turn into monthly rates
interest_rates <- xts(interest_rates[,-1], order.by = as.Date(interest_rates$Date,  format = "%d.%m.%Y"))
#View(interest_rates)
interest_rates_mon <- ((1+interest_rates/100)^(1/12)-1)
prices <- read.delim(file = 'A3_dataset_01.txt', header = TRUE, sep = '\t', dec = '.')
SMI_monthly <- read.delim(file = 'A3_dataset_02.txt', header = TRUE, sep = '\t', dec = '.')
interest_rates <- read.delim(file = 'A3_dataset_03.txt', header = TRUE, sep = '\t', dec = '.')
# # create monthly returns for stocks and SMI
date <- as.Date(prices[,1], format = "%d.%m.%Y")
prices.ts <- xts(x = prices[,-1], order.by = date)
#View(prices.ts)
returns <- Return.calculate(prices = prices.ts, method = 'discrete')
#
SMI_monthly <- xts(SMI_monthly[,-1], order.by = as.Date(SMI_monthly$Date, format = "%d.%m.%Y"))
#View(SMI_monthly)
SMI_TotRet_mon <- Return.calculate(SMI_monthly)
#
# # turn interest_rates into ts and divide by 100 because it is in percentages and turn into monthly rates
interest_rates <- xts(interest_rates[,-1], order.by = as.Date(interest_rates$Date,  format = "%d.%m.%Y"))
#View(interest_rates)
interest_rates_mon <- ((1+interest_rates/100)^(1/12)-1)
View(returns)
View(prices.ts)
prices <- read.delim(file = 'A3_dataset_01.txt', header = TRUE, sep = '\t', dec = '.')
SMI_monthly <- read.delim(file = 'A3_dataset_02.txt', header = TRUE, sep = '\t', dec = '.')
interest_rates <- read.delim(file = 'A3_dataset_03.txt', header = TRUE, sep = '\t', dec = '.')
# # create monthly returns for stocks and SMI
date <- as.Date(prices[,1], format = "%d.%m.%Y")
prices.ts <- xts(x = prices[,-1], order.by = date)
#View(prices.ts)
returns <- Return.calculate(prices = prices.ts, method = 'log')
#
SMI_monthly <- xts(SMI_monthly[,-1], order.by = as.Date(SMI_monthly$Date, format = "%d.%m.%Y"))
#View(SMI_monthly)
SMI_TotRet_mon <- Return.calculate(SMI_monthly, method = "log")
#
# # turn interest_rates into ts and divide by 100 because it is in percentages and turn into monthly rates
interest_rates <- xts(interest_rates[,-1], order.by = as.Date(interest_rates$Date,  format = "%d.%m.%Y"))
#View(interest_rates)
interest_rates_mon <- ((1+interest_rates/100)^(1/12)-1)
View(returns)
View(returns)
View(SMI_monthly)
View(SMI_monthly)
View(SMI_TotRet_mon)
View(interest_rates_mon)
market_premium = SMI_TotRet_mon - interest_rates_mon
View(market_premium)
excess_return <- Return.excess(returns, interest_rates_mon)
View(excess_return)
market_premium <- Return.excess(SMI_TotRet_mon, interest_rates_mon)
#regress excess return over
lm(excess_return ~ market_premium)
#regress excess return over
betas <- lm(excess_return ~ market_premium)
betas$model
betas$coefficients
#regress excess return over
betas <- lm(excess_return$`ABB > Rf`~ market_premium)
betas
betas$coefficients
betas$coefficients[1]
betas$coefficients[2]
summary(beta)
summary(betas)
#regress excess return over
betas <- lm(excess_return ~ market_premium)
summary(betas)
#regress excess return over
betas <- lm(excess_return ~ market_premium)
summary(betas)
#regress excess return over
betas <- lm(excess_return$`ABB > Rf` ~ market_premium)
summary(betas)
for i in excess_return:
for (i in excess_return){}
for (i in excess_return){print(i) }
View(excess_return)
for (i in excess_return){print(i) }
for(i in name(excess_retun)){
print(i)
}
for(i in names(excess_retun)){
print(i)
}
for(i in names(excess_return)){
print(i)
for(i in names(excess_return)){
print(i)
}
rm(ls)
ls()
rm
rm()
rm(list = ls())
# set working directory
# setwd("~/UZH/Empirical Finance/Assignment 3")
setwd("C:/Users/p_lae/OneDrive - Universit채t Z체rich UZH/Dokumente/Universit채t Z체rich/12. Semester/Empirical Finance/EmpiricalFinance/Assignment 3")
# load libraries
library(xts)
library(PerformanceAnalytics)
library(psych)
library(roll)
library(data.table)
library(ggplot2)
###############
# Data import #
###############
prices <- read.delim(file = 'A3_dataset_01.txt', header = TRUE, sep = '\t', dec = '.')
SMI_monthly <- read.delim(file = 'A3_dataset_02.txt', header = TRUE, sep = '\t', dec = '.')
interest_rates <- read.delim(file = 'A3_dataset_03.txt', header = TRUE, sep = '\t', dec = '.')
# # create monthly returns for stocks and SMI
date <- as.Date(prices[,1], format = "%d.%m.%Y")
prices.ts <- xts(x = prices[,-1], order.by = date)
#View(prices.ts)
returns <- Return.calculate(prices = prices.ts, method = 'log')
#
SMI_monthly <- xts(SMI_monthly[,-1], order.by = as.Date(SMI_monthly$Date, format = "%d.%m.%Y"))
#View(SMI_monthly)
SMI_TotRet_mon <- Return.calculate(SMI_monthly, method = "log")
#
# # turn interest_rates into ts and divide by 100 because it is in percentages and turn into monthly rates
interest_rates <- xts(interest_rates[,-1], order.by = as.Date(interest_rates$Date,  format = "%d.%m.%Y"))
#View(interest_rates)
interest_rates_mon <- ((1+interest_rates/100)^(1/12)-1)
View(prices)
View(SMI_monthly)
View(interest_rates_mon)
# calculating excess returns by subtracting risk-free from returns
excess_return <- Return.excess(returns, interest_rates_mon)
View(excess_return)
View(returns)
View(interest_rates_mon)
# calculate market premium by subtracting risk-free returns from market return
market_premium <- Return.excess(SMI_TotRet_mon, interest_rates_mon)
View(market_premium)
lin_reg_values <- data.frame(
company_name = character(),
alpha = double(),
alpha_t_value = double(),
beta=double(),
beta_t_value = double())
for(i in 1:ncol(excess_return)){
beta_regression <- summary(lm(excess_return[,i] ~ market_premium))
company_name <- colnames(excess_return[,i])
parsed_name <- gsub('.{5}$', '', company_name)
new_row <- c(company_name = parsed_name,
alpha = beta_regression$coefficients[1,1],
alpha_t_value = beta_regression$coefficients[1,2],
beta = beta_regression$coefficients[2,1],
beta_t_value = beta_regression$coefficients[2,2]
)
lin_reg_values<- rbind(lin_reg_values, new_row)
}
names(lin_reg_values)[1]<-paste("company_name")
names(lin_reg_values)[2]<-paste("alpha")
names(lin_reg_values)[3]<-paste("alpha_t_value")
names(lin_reg_values)[4]<-paste("beta")
names(lin_reg_values)[5]<-paste("beta_t_value")
View(lin_reg_values)
mean_values <- data.frame(
company_name = character(),
mean = double())
for(i in 1:ncol(excess_return)){
company_name <- colnames(excess_return[,i])
parsed_name <- gsub('.{5}$', '', company_name)
new_row <- c(company_name = parsed_name,
mean = mean(excess_return[,i], na.rm = TRUE)
)
mean_values<- rbind(mean_values, new_row)
}
names(mean_values)[1]<-paste("company_name")
names(mean_values)[2]<-paste("mean")
beta_ordered <- lin_reg_values[order(lin_reg_values$beta),]
top5beta <- tail(beta_ordered, 5)
low5beta <- head(beta_ordered, 5)
dat <- data.frame(
return = excess_return$`Zurich_Insurance_Group_N > Rf`,
market = market_premium
)
names(dat)[1]<-paste("ZurichInsurance")
names(dat)[2]<-paste("marketpremium")
ggplot(dat, aes(x=ZurichInsurance, y=market_premium)) +
geom_point(shape=1) +
geom_smooth(method=lm,   # Add linear regression line
se=FALSE)
View(lin_reg_values)
View(interest_rates_mon)
new_data <- cbind(lin_reg_values,mean_values)
#View(new_data)
as.numeric(new_data$mean)
new_data$ann_returns <- new_data$mean  * 5
plot(as.numeric(new_data$beta), as.numeric(new_data$mean), main = "Beta Realized Return Relationship", xlab="Realized Beta", ylab="Mean Excess Return")
View(new_data)
new_data$ann_returns <- new_data$mean*12
#View(new_data)
as.numeric(new_data$mean)
#View(new_data)
new_data$mean <- as.numeric(new_data$mean)
new_data$ann_returns <- new_data$mean*12
View(new_data)
plot(as.numeric(new_data$beta), as.numeric(new_data$ann_returns), main = "Beta Realized Return Relationship", xlab="Realized Beta", ylab="Mean Excess Return (ann.)")
###### 2.
str(new_data)
new_data$beta <- as.numeric(new_data$beta)
new_data$mean <- as.numeric(new_data$mean)
new_data$mean <- as.numeric(new_data$alpha)
new_data$mean <- as.numeric(new_data$alpha_t_value)
new_data$mean <- as.numeric(new_data$beta_t_value)
cross_section <- lm(new_data$mean ~ new_data$beta)
summary(cross_section)
mean_excess_market_return <- colMeans(market_premium, na.rm = TRUE)
mean_excess_market_return #???
View(new_data)
View(mean_values)
new_data <- cbind(lin_reg_values,mean_values)
#View(new_data)
new_data$mean <- as.numeric(new_data$mean)
new_data$ann_returns <- new_data$mean*12
plot(as.numeric(new_data$beta), as.numeric(new_data$ann_returns), main = "Beta Realized Return Relationship", xlab="Realized Beta", ylab="Mean Excess Return (ann.)")
View(new_data)
# make data frame with regression coefficients and mean excess returns
new_data <- cbind(lin_reg_values,mean_values)
# convert columns to numeric values
new_data$beta <- as.numeric(new_data$beta)
new_data$mean <- as.numeric(new_data$mean)
new_data$mean <- as.numeric(new_data$alpha)
new_data$mean <- as.numeric(new_data$alpha_t_value)
new_data$mean <- as.numeric(new_data$beta_t_value)
# annualize mean excess return
new_data$ann_returns <- new_data$mean*12
# polot beta realized return relationship
plot(as.numeric(new_data$beta), as.numeric(new_data$ann_returns), main = "Beta Realized Return Relationship", xlab="Realized Beta", ylab="Mean Excess Return (ann.)")
# make data frame with regression coefficients and mean excess returns
new_data <- cbind(lin_reg_values,mean_values)
# convert columns to numeric values
new_data$beta <- as.numeric(new_data$beta)
new_data$mean <- as.numeric(new_data$mean)
new_data$mean <- as.numeric(new_data$alpha)
new_data$mean <- as.numeric(new_data$alpha_t_value)
new_data$mean <- as.numeric(new_data$beta_t_value)
# make data frame with regression coefficients and mean excess returns
new_data <- cbind(lin_reg_values,mean_values)
View(new_data)
# convert columns to numeric values
new_data$beta <- as.numeric(new_data$beta)
new_data$mean <- as.numeric(new_data$mean)
new_data$alpha <- as.numeric(new_data$alpha)
new_data$alpha_t_value <- as.numeric(new_data$alpha_t_value)
new_data$beta_t_value <- as.numeric(new_data$beta_t_value)
# annualize mean excess return
new_data$ann_returns <- new_data$mean*12
# polot beta realized return relationship
plot(as.numeric(new_data$beta), as.numeric(new_data$ann_returns), main = "Beta Realized Return Relationship", xlab="Realized Beta", ylab="Mean Excess Return (ann.)")
# make data frame with regression coefficients and mean excess returns
new_data <- cbind(lin_reg_values,mean_values)
# convert columns to numeric values
new_data$beta <- as.numeric(new_data$beta)
new_data$mean <- as.numeric(new_data$mean)
new_data$alpha <- as.numeric(new_data$alpha)
new_data$alpha_t_value <- as.numeric(new_data$alpha_t_value)
new_data$beta_t_value <- as.numeric(new_data$beta_t_value)
# annualize mean excess return
new_data$ann_returns <- new_data$mean*12
# polot beta realized return relationship
plot(new_data$beta, new_data$ann_returns, main = "Beta Realized Return Relationship", xlab="Realized Beta", ylab="Mean Excess Return (ann.)")
# make data frame with regression coefficients and mean excess returns
new_data <- cbind(lin_reg_values,mean_values)
# convert columns to numeric values
new_data$beta <- as.numeric(new_data$beta)
new_data$mean <- as.numeric(new_data$mean)
new_data$alpha <- as.numeric(new_data$alpha)
new_data$alpha_t_value <- as.numeric(new_data$alpha_t_value)
new_data$beta_t_value <- as.numeric(new_data$beta_t_value)
# annualize mean excess return
new_data$ann_returns <- new_data$mean*12
View(market_premium)
summary(cross_section)
mean_excess_market_return <- colMeans(market_premium, na.rm = TRUE)
mean_excess_market_return #???
mean(market_premium, na.rm=T)
