install.packages("miktex")
install.packages("installr")
library(installr)
updateR()
install.packages("xm12")
library(xm12)
library("xm12")
library(xm12)
install.packages("xml2")
library(xml2)
webpage_url <- "https://supportyoursport.migros.ch/de/rangliste/gruppe-c/"
webpage <- sml2::read_html(webpage_url)
webpage <- xml2::read_html(webpage_url)
ExOffndrsRaw <- rvest::html_table(webpage)[[1]] %>%
tibble::as_tibble(.name_repair = "unique") # repair the repeated columns
library(rvest)
library(tibble)
ExOffndrsRaw <- rvest::html_table(webpage)[[1]] %>%
tibble::as_tibble(.name_repair = "unique") # repair the repeated columns
# load libraries
library(xts)
library(PerformanceAnalytics)
library(psych)
library(roll)
###############
# Data import #
###############
prices_monthly <- read.delim(file = 'A2_dataset_01.txt', header = TRUE, sep = '\t', dec = '.')
interest_rates <- read.delim(file = 'A2_dataset_02.txt', header = TRUE, sep = '\t', dec = '.')
SMI_monthly <- read.delim(file = 'A2_dataset_03.txt', header = TRUE, sep = '\t', dec = '.')
prices_daily <- read.delim(file = 'A2_dataset_04.txt', header = TRUE, sep = '\t', dec = '.')
betas <- read.delim(file = 'A2_dataset_05.txt', header = TRUE, sep = '\t', dec = '.')
# create monthly returns for stocks and SMI
date <- as.Date(prices_monthly[,1])
prices.ts <- xts(x = prices_monthly[,-1], order.by = date)
returns <- Return.calculate(prices = prices.ts, method = 'discrete')
SMI_monthly <- xts(SMI_monthly[,-1], order.by = as.Date(SMI_monthly$Date))
SMI_TotRet_mon <- Return.calculate(SMI_monthly)
# turn interest_rates into ts and divide by 100 because it is in percentages
interest_rates <- xts(interest_rates[,-1], order.by = as.Date(interest_rates$Date))
interest_rates <- interest_rates/100
#################
###  Ex 5.1  ###
#################
####### 1.
# no code required
####### 2.
# no code required
####### 3.
# make regression for beta and other (first calculate SMI excess return and the same for each stock)
SMI_excess <- SMI_TotRet_mon$SMI.Total.Return['2016-03-31/2021-02-26'] - interest_rates$SWISS.CONFEDERATION.BOND.5.YEAR...RED..YIELD['2016-03-31/2021-02-26']
adecco_excess <- returns$Adecco['2016-03-31/2021-02-26'] - interest_rates$SWISS.CONFEDERATION.BOND.5.YEAR...RED..YIELD['2016-03-31/2021-02-26']
fit_adecco <- lm(adecco_excess ~SMI_excess)
result_adecco <- summary(fit_adecco)
row_adecco <- c(result_adecco$coefficients[2,1],
result_adecco$coefficients[1,1],
result_adecco$r.squared,
sigma(fit_adecco),
result_adecco$coefficients[2,2],
result_adecco$coefficients[1,2])
cs_excess <- returns$Credit_Suisse_Group['2016-03-31/2021-02-26'] - interest_rates$SWISS.CONFEDERATION.BOND.5.YEAR...RED..YIELD['2016-03-31/2021-02-26']
fit_cs <- lm(cs_excess ~SMI_excess)
result_cs<- summary(fit_cs)
row_cs <- c(result_cs$coefficients[2,1],
result_cs$coefficients[1,1],
result_cs$r.squared,
sigma(fit_cs),
result_cs$coefficients[2,2],
result_cs$coefficients[1,2])
lafarge_excess <- returns$LafargeHolcim['2016-03-31/2021-02-26'] - interest_rates$SWISS.CONFEDERATION.BOND.5.YEAR...RED..YIELD['2016-03-31/2021-02-26']
fit_lafarge <- lm(lafarge_excess ~SMI_excess)
result_lafarge<- summary(fit_lafarge)
row_lafarge <- c(result_lafarge$coefficients[2,1],
result_lafarge$coefficients[1,1],
result_lafarge$r.squared,
sigma(fit_lafarge),
result_lafarge$coefficients[2,2],
result_lafarge$coefficients[1,2])
swisscom_excess <- returns$Swisscom['2016-03-31/2021-02-26'] - interest_rates$SWISS.CONFEDERATION.BOND.5.YEAR...RED..YIELD['2016-03-31/2021-02-26']
fit_swisscom <- lm(swisscom_excess ~SMI_excess)
result_swisscom<- summary(fit_swisscom)
row_swisscom <- c(result_swisscom$coefficients[2,1],
result_swisscom$coefficients[1,1],
result_swisscom$r.squared,
sigma(fit_swisscom),
result_swisscom$coefficients[2,2],
result_swisscom$coefficients[1,2])
beta_table <- rbind(row_adecco, row_cs, row_lafarge, row_swisscom)
rownames(beta_table) <- c("Adecco", "Credit Suisse", "LafargeHolcim", "Swisscom")
colnames(beta_table) <- c("Beta", "Alpha", "R2", "Res. Std. Dev.", "Std. Err. Beta", "Std Err. Alpha")
# set working directory
# setwd("~/UZH/Empirical Finance/Assignment 1")
setwd("C:/Users/p_lae/OneDrive - Universit채t Z체rich UZH/Dokumente/Universit채t Z체rich/12. Semester/Empirical Finance/EmpiricalFinance/Assignment 2")
# load libraries
library(xts)
library(PerformanceAnalytics)
library(psych)
library(roll)
###############
# Data import #
###############
prices_monthly <- read.delim(file = 'A2_dataset_01.txt', header = TRUE, sep = '\t', dec = '.')
interest_rates <- read.delim(file = 'A2_dataset_02.txt', header = TRUE, sep = '\t', dec = '.')
SMI_monthly <- read.delim(file = 'A2_dataset_03.txt', header = TRUE, sep = '\t', dec = '.')
prices_daily <- read.delim(file = 'A2_dataset_04.txt', header = TRUE, sep = '\t', dec = '.')
betas <- read.delim(file = 'A2_dataset_05.txt', header = TRUE, sep = '\t', dec = '.')
# create monthly returns for stocks and SMI
date <- as.Date(prices_monthly[,1])
prices.ts <- xts(x = prices_monthly[,-1], order.by = date)
returns <- Return.calculate(prices = prices.ts, method = 'discrete')
SMI_monthly <- xts(SMI_monthly[,-1], order.by = as.Date(SMI_monthly$Date))
SMI_TotRet_mon <- Return.calculate(SMI_monthly)
# turn interest_rates into ts and divide by 100 because it is in percentages
interest_rates <- xts(interest_rates[,-1], order.by = as.Date(interest_rates$Date))
interest_rates <- interest_rates/100
#################
###  Ex 5.1  ###
#################
####### 1.
# no code required
####### 2.
# no code required
####### 3.
# make regression for beta and other (first calculate SMI excess return and the same for each stock)
SMI_excess <- SMI_TotRet_mon$SMI.Total.Return['2016-03-31/2021-02-26'] - interest_rates$SWISS.CONFEDERATION.BOND.5.YEAR...RED..YIELD['2016-03-31/2021-02-26']
adecco_excess <- returns$Adecco['2016-03-31/2021-02-26'] - interest_rates$SWISS.CONFEDERATION.BOND.5.YEAR...RED..YIELD['2016-03-31/2021-02-26']
fit_adecco <- lm(adecco_excess ~SMI_excess)
result_adecco <- summary(fit_adecco)
row_adecco <- c(result_adecco$coefficients[2,1],
result_adecco$coefficients[1,1],
result_adecco$r.squared,
sigma(fit_adecco),
result_adecco$coefficients[2,2],
result_adecco$coefficients[1,2])
cs_excess <- returns$Credit_Suisse_Group['2016-03-31/2021-02-26'] - interest_rates$SWISS.CONFEDERATION.BOND.5.YEAR...RED..YIELD['2016-03-31/2021-02-26']
fit_cs <- lm(cs_excess ~SMI_excess)
result_cs<- summary(fit_cs)
row_cs <- c(result_cs$coefficients[2,1],
result_cs$coefficients[1,1],
result_cs$r.squared,
sigma(fit_cs),
result_cs$coefficients[2,2],
result_cs$coefficients[1,2])
lafarge_excess <- returns$LafargeHolcim['2016-03-31/2021-02-26'] - interest_rates$SWISS.CONFEDERATION.BOND.5.YEAR...RED..YIELD['2016-03-31/2021-02-26']
fit_lafarge <- lm(lafarge_excess ~SMI_excess)
result_lafarge<- summary(fit_lafarge)
row_lafarge <- c(result_lafarge$coefficients[2,1],
result_lafarge$coefficients[1,1],
result_lafarge$r.squared,
sigma(fit_lafarge),
result_lafarge$coefficients[2,2],
result_lafarge$coefficients[1,2])
swisscom_excess <- returns$Swisscom['2016-03-31/2021-02-26'] - interest_rates$SWISS.CONFEDERATION.BOND.5.YEAR...RED..YIELD['2016-03-31/2021-02-26']
fit_swisscom <- lm(swisscom_excess ~SMI_excess)
result_swisscom<- summary(fit_swisscom)
row_swisscom <- c(result_swisscom$coefficients[2,1],
result_swisscom$coefficients[1,1],
result_swisscom$r.squared,
sigma(fit_swisscom),
result_swisscom$coefficients[2,2],
result_swisscom$coefficients[1,2])
beta_table <- rbind(row_adecco, row_cs, row_lafarge, row_swisscom)
rownames(beta_table) <- c("Adecco", "Credit Suisse", "LafargeHolcim", "Swisscom")
colnames(beta_table) <- c("Beta", "Alpha", "R2", "Res. Std. Dev.", "Std. Err. Beta", "Std Err. Alpha")
test <- round(beta_table,4)
result_adecco
t_values <- c(result_adecco$coefficients[2,3], result_cs$coefficients[2,3], result_lafarge$coefficients[2,3], result_swisscom$coefficients[2,3])
result_swisscom
row.names(t_values) <- "Beta t-values"
t_values <- as.table(c(result_adecco$coefficients[2,3], result_cs$coefficients[2,3], result_lafarge$coefficients[2,3], result_swisscom$coefficients[2,3]))
row.names(t_values) <- "Beta t-values"
t_values
colnames(t_values) <- ("Adecco", "Credit Suisse", "LafargeHolcim", "Swisscom")
colnames(t_values) <- c("Adecco", "Credit Suisse", "LafargeHolcim", "Swisscom")
t_values <- as.datatable(c(result_adecco$coefficients[2,3], result_cs$coefficients[2,3], result_lafarge$coefficients[2,3], result_swisscom$coefficients[2,3]))
library(data.table)
t_values <- data.table(c(result_adecco$coefficients[2,3], result_cs$coefficients[2,3], result_lafarge$coefficients[2,3], result_swisscom$coefficients[2,3]))
colnames(t_values) <- c("Adecco", "Credit Suisse", "LafargeHolcim", "Swisscom")
t_values <- data.table(Adecco = result_adecco$coefficients[2,3],
Credit_Suisse = result_cs$coefficients[2,3],
LafargeHolcim = result_lafarge$coefficients[2,3],
Swisscom= result_swisscom$coefficients[2,3])
View(t_values)
####### 6.
AF_betas <- data.table(Adecco = (result_adecco$coefficients[2,1]*2/3+1/3),
Credit_Suisse = (result_cs$coefficients[2,1]*2/3+1/3),
LafargeHolcim = (result_lafarge$coefficients[2,1]*2/3+1/3),
Swisscom= (result_swisscom$coefficients[2,1]*2/3+1/3))
View(AF_betas)
View(betas)
date <- as.Date(betas[,1])
betas.ts <- xts(x = betas[,-1], order.by = date)
mean(betas.ts$Adecco['2007-07-02/2009-03-31'])
