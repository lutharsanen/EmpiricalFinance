setwd("C:/Users/Laesser/OneDrive - Universität Zürich UZH/Dokumente/Universität Zürich/12. Semester/Empirical Finance/Code/Data")
# the xts package contains time-series functions, things like reading the data and associating each observation
# with a date
library(xts)
# the PerformanceAnalytics package allows for the calculation of returns and econometric functions for performance
# evaluation
library(PerformanceAnalytics)
# The psych package is meant to produce the most frequently requested stats and display them in an easy to read
# data frame
library(psych)
#Read in the SMI index
#SMI <- read.delim("EF_1_Dataset_SMIonly_MarketValueMonthly.txt",sep = '\t', header = TRUE, dec = '.')
SMI <- read.delim("EF_data_SMI_index_mon.txt",sep = '\t', header = TRUE, dec = '.')
SMI.ts <- xts(x = SMI[,-1], order.by = date)
# <- defines the vairable
# read is a function .delim implies the file is delimited
# file  is the dataset, R can easily also import csv and xls files (but you need to use different functions then)
# the option header=TRUE indicates that the first row is variable names
# sep = '' indicates that data are separated by a space
# dec = '.' indicates that the decimal point is given by .
prices <- read.delim(file = 'EF_data_SMI_prices_mon.txt', header = TRUE, sep = '\t', dec = '.')
date <- as.Date(prices[,1])
SMI.ts <- xts(x = SMI[,-1], order.by = date)
SMI_return <- Return.calculate(SMI.ts)
SMI_return.ts <- xts(SMI_return, order.by = date)
SMI_return.ts <- SMI_return.ts[-1,]
View(SMI)
View(SMI.ts)
SMI_monthly <- read.delim("EF_data_SMI_index_mon_17.txt",sep = "\t", header = TRUE, na = "NA")
SMI_monthly <- read.delim("EF_data_SMI_index_mon_17.txt",sep = "\t", header = TRUE, na = "NA")
datebond_monthly <- as.Date(SMI_monthly$Date)
View(SMI_monthly)
SMI_monthly <- xts(SMI_monthly[,-1], order.by = as.Date(SMI_monthly$Date))
View(SMI_monthly)
SMI <- read.delim(file = 'A2_dataset_03.txt', header = TRUE, sep = '\t', dec = '.')
setwd("C:/Users/Laesser/OneDrive - Universität Zürich UZH/Dokumente/Universität Zürich/12. Semester/Empirical Finance/EmpiricalFinance/Assignment 2")
SMI <- read.delim(file = 'A2_dataset_03.txt', header = TRUE, sep = '\t', dec = '.')
View(SMI)
SMI_monthly <- xts(SMI_monthly[,-1], order.by = as.Date(SMI_monthly$Date))
SMI_monthly <- read.delim(file = 'A2_dataset_03.txt', header = TRUE, sep = '\t', dec = '.')
SMI_monthly <- xts(SMI_monthly[,-1], order.by = as.Date(SMI_monthly$Date))
SMI_TotRet_mon <- Return.calculate(SMI_monthly)
View(SMI_TotRet_mon)
View(SMI_TotRet_mon)
fit_adecco <- lm(returns$Adecco['2016-03-31/2021-2-26']
- interest_rates$SWISS.CONFEDERATION.BOND.5.YEAR...RED..YIELD['2016-03-31/2021-2-26']
~ SMI_TotRet_mon$SMI.Total.Return['2016-03-31/2021-2-26']
- interest_rates$SWISS.CONFEDERATION.BOND.5.YEAR...RED..YIELD['2016-03-31/2021-2-26'])
###############
# Data import #
###############
prices_monthly <- read.delim(file = 'A2_dataset_01.txt', header = TRUE, sep = '\t', dec = '.')
# create monthly returns for stocks and SMI
date <- as.Date(prices_monthly[,1])
prices.ts <- xts(x = prices_monthly[,-1], order.by = date)
returns <- Return.calculate(prices = prices.ts, method = 'discrete')
fit_adecco <- lm(returns$Adecco['2016-03-31/2021-2-26']
- interest_rates$SWISS.CONFEDERATION.BOND.5.YEAR...RED..YIELD['2016-03-31/2021-2-26']
~ SMI_TotRet_mon$SMI.Total.Return['2016-03-31/2021-2-26']
- interest_rates$SWISS.CONFEDERATION.BOND.5.YEAR...RED..YIELD['2016-03-31/2021-2-26'])
interest_rates <- read.delim(file = 'A2_dataset_02.txt', header = TRUE, sep = '\t', dec = '.')
View(interest_rates)
# turn interest_rates into ts and divide by 100 because it is in percentages
interest_rates <- xts(interest_rates[,-1], order.by = as.Date(interest_rates$Date))
interest_rates <- interest_rates/100
fit_adecco <- lm(returns$Adecco['2016-03-31/2021-2-26']
- interest_rates$SWISS.CONFEDERATION.BOND.5.YEAR...RED..YIELD['2016-03-31/2021-2-26']
~ SMI_TotRet_mon$SMI.Total.Return['2016-03-31/2021-2-26']
- interest_rates$SWISS.CONFEDERATION.BOND.5.YEAR...RED..YIELD['2016-03-31/2021-2-26'])
###############
# Data import #
###############
prices_monthly <- read.delim(file = 'A2_dataset_01.txt', header = TRUE, sep = '\t', dec = '.')
interest_rates <- read.delim(file = 'A2_dataset_02.txt', header = TRUE, sep = '\t', dec = '.')
SMI_monthly <- read.delim(file = 'A2_dataset_03.txt', header = TRUE, sep = '\t', dec = '.')
prices_daily <- read.delim(file = 'A2_dataset_04.txt', header = TRUE, sep = '\t', dec = '.')
betas <- read.delim(file = 'A2_dataset_05.txt', header = TRUE, sep = '\t', dec = '.')
# create monthly returns for stocks and SMI
date <- as.Date(prices_monthly[,1])
prices.ts <- xts(x = prices_monthly[,-1], order.by = date)
returns <- Return.calculate(prices = prices.ts, method = 'discrete')
SMI_monthly <- xts(SMI_monthly[,-1], order.by = as.Date(SMI_monthly$Date))
SMI_TotRet_mon <- Return.calculate(SMI_monthly)
# turn interest_rates into ts and divide by 100 because it is in percentages
interest_rates <- xts(interest_rates[,-1], order.by = as.Date(interest_rates$Date))
interest_rates <- interest_rates/100
fit_adecco <- lm(returns$Adecco['2016-03-31/2021-2-26']
- interest_rates$SWISS.CONFEDERATION.BOND.5.YEAR...RED..YIELD['2016-03-31/2021-2-26']
~ SMI_TotRet_mon$SMI.Total.Return['2016-03-31/2021-2-26']
- interest_rates$SWISS.CONFEDERATION.BOND.5.YEAR...RED..YIELD['2016-03-31/2021-2-26'])
View(SMI_TotRet_mon)
View(returns)
View(prices_monthly)
View(prices_daily)
# make regression for beta --> only up to August 2020 (because of unavailable data for Adecco)
fit_adecco <- lm(returns$Adecco['2016-03-31/2020-8-31']
- interest_rates$SWISS.CONFEDERATION.BOND.5.YEAR...RED..YIELD['2016-03-31/2020-8-31']
~ SMI_TotRet_mon$SMI.Total.Return['2016-03-31/2020-8-31']
- interest_rates$SWISS.CONFEDERATION.BOND.5.YEAR...RED..YIELD['2016-03-31/2020-8-31'])
